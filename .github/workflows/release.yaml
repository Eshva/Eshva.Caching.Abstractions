on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
jobs:
  build-and-test:
    name: Build and validate quality
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        framework: [ net6.0, net7.0, net8.0, net9.0 ]
        include:
          - framework: net6.0
            dotnet: '6.0.x'
          - framework: net7.0
            dotnet: '7.0.x'
          - framework: net8.0
            dotnet: '8.0.x'
          - framework: net9.0
            dotnet: '9.0.x'
          - os: windows-latest
            framework: net462
            dotnet: '9.0.x'
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    steps:
      - name: Checkout sources
        uses: actions/checkout@v5
      - name: Setup .NET ${{ matrix.dotnet }} on ${{ matrix.os }}
        id: setup-dotnet
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: ${{ matrix.dotnet }}
          dotnet-quality: ga
      - name: Build sources
        run: dotnet build code/Eshva.Caching.Abstractions.slnx --configuration Release --framework ${{ matrix.framework }}
      - name: Validate quality
        run: dotnet test code/Eshva.Caching.Abstractions.slnx --configuration Release --no-build --framework ${{ matrix.framework }}
  build-and-publish:
    name: Build the NuGet-package and publish it to nuget.org
    needs: build-and-test
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout sources
        uses: actions/checkout@v5
      - name: Verify commit exists in origin/master
        run: |
          git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
          git branch --remote --contains | grep origin/master
      - name: Set VERSION variable from tag
        run: echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV
      - name: Build and pack the NuGet-package
        run: dotnet pack code/Eshva.Caching.Abstractions.slnx --configuration Release /p:Version=${VERSION} --output .
      - name: NuGet login (OIDC â†’ temp API key)
        uses: NuGet/login@v1
        id: login
        with:
          user: ${{ secrets.NUGET_USER }}
      - name: Publish the NuGet-package to nuget.org
        run: dotnet nuget push Eshva.Caching.Abstractions.${VERSION}.nupkg --api-key ${{ steps.login.outputs.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
